{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17034\\\\Documents\\\\GitHub\\\\CS321\\\\frontend\\\\src\\\\components\\\\IncomePieChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport { useIncomeContext } from '../hooks/useIncomeContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IncomePieChart = () => {\n  _s();\n  const {\n    income\n  } = useIncomeContext();\n  const [chartData, setChartData] = useState(null);\n  useEffect(() => {\n    if (income) {\n      const labels = income.map(item => item.category);\n      const data = income.map(item => item.amount);\n      setChartData({\n        labels: labels,\n        datasets: [{\n          data: data,\n          backgroundColor: ['rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)', 'rgba(255, 206, 86, 0.6)', 'rgba(75, 192, 192, 0.6)', 'rgba(153, 102, 255, 0.6)', 'rgba(255, 159, 64, 0.6)'\n          // Add more colors if needed\n          ],\n          hoverBackgroundColor: ['rgba(255, 99, 132, 0.8)', 'rgba(54, 162, 235, 0.8)', 'rgba(255, 206, 86, 0.8)', 'rgba(75, 192, 192, 0.8)', 'rgba(153, 102, 255, 0.8)', 'rgba(255, 159, 64, 0.8)'\n          // Add more colors if needed\n          ]\n        }]\n      });\n    }\n  }, [income]);\n\n  // Custom tooltip function to display both label and value\n  const customTooltip = ({\n    datasetIndex,\n    index\n  }, chartData) => {\n    const label = chartData.labels[index];\n    const value = chartData.datasets[0].data[index];\n    return `${label}: $${value}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '30%',\n      float: 'left'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Income Pie Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), chartData && /*#__PURE__*/_jsxDEV(Pie, {\n      data: chartData,\n      options: {\n        tooltips: {\n          callbacks: {\n            label: customTooltip\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(IncomePieChart, \"LdtFLhSM3HvJMA18bUPgrroNdhc=\", false, function () {\n  return [useIncomeContext];\n});\n_c = IncomePieChart;\nexport default IncomePieChart;\nvar _c;\n$RefreshReg$(_c, \"IncomePieChart\");","map":{"version":3,"names":["React","useEffect","useState","Pie","useIncomeContext","jsxDEV","_jsxDEV","IncomePieChart","_s","income","chartData","setChartData","labels","map","item","category","data","amount","datasets","backgroundColor","hoverBackgroundColor","customTooltip","datasetIndex","index","label","value","style","width","float","children","fileName","_jsxFileName","lineNumber","columnNumber","options","tooltips","callbacks","_c","$RefreshReg$"],"sources":["C:/Users/17034/Documents/GitHub/CS321/frontend/src/components/IncomePieChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Pie } from 'react-chartjs-2'\r\nimport { useIncomeContext } from '../hooks/useIncomeContext';\r\n\r\nconst IncomePieChart = () => {\r\n    const { income } = useIncomeContext();\r\n    const [chartData, setChartData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (income) {\r\n            const labels = income.map(item => item.category);\r\n            const data = income.map(item => item.amount);\r\n\r\n            setChartData({\r\n                labels: labels,\r\n                datasets: [\r\n                    {\r\n                        data: data,\r\n                        backgroundColor: [\r\n                            'rgba(255, 99, 132, 0.6)',\r\n                            'rgba(54, 162, 235, 0.6)',\r\n                            'rgba(255, 206, 86, 0.6)',\r\n                            'rgba(75, 192, 192, 0.6)',\r\n                            'rgba(153, 102, 255, 0.6)',\r\n                            'rgba(255, 159, 64, 0.6)'\r\n                            // Add more colors if needed\r\n                        ],\r\n                        hoverBackgroundColor: [\r\n                            'rgba(255, 99, 132, 0.8)',\r\n                            'rgba(54, 162, 235, 0.8)',\r\n                            'rgba(255, 206, 86, 0.8)',\r\n                            'rgba(75, 192, 192, 0.8)',\r\n                            'rgba(153, 102, 255, 0.8)',\r\n                            'rgba(255, 159, 64, 0.8)'\r\n                            // Add more colors if needed\r\n                        ]\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n    }, [income]);\r\n\r\n    // Custom tooltip function to display both label and value\r\n    const customTooltip = ({ datasetIndex, index }, chartData) => {\r\n        const label = chartData.labels[index];\r\n        const value = chartData.datasets[0].data[index];\r\n        return `${label}: $${value}`;\r\n    };\r\n\r\n    return (\r\n        <div style={{ width: '30%', float: 'left' }}>\r\n            <h3>Income Pie Chart</h3>\r\n            {chartData && <Pie data={chartData} options={{ tooltips: { callbacks: { label: customTooltip } } }} />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default IncomePieChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SAASC,gBAAgB,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAO,CAAC,GAAGL,gBAAgB,CAAC,CAAC;EACrC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACZ,IAAIQ,MAAM,EAAE;MACR,MAAMG,MAAM,GAAGH,MAAM,CAACI,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,QAAQ,CAAC;MAChD,MAAMC,IAAI,GAAGP,MAAM,CAACI,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACG,MAAM,CAAC;MAE5CN,YAAY,CAAC;QACTC,MAAM,EAAEA,MAAM;QACdM,QAAQ,EAAE,CACN;UACIF,IAAI,EAAEA,IAAI;UACVG,eAAe,EAAE,CACb,yBAAyB,EACzB,yBAAyB,EACzB,yBAAyB,EACzB,yBAAyB,EACzB,0BAA0B,EAC1B;UACA;UAAA,CACH;UACDC,oBAAoB,EAAE,CAClB,yBAAyB,EACzB,yBAAyB,EACzB,yBAAyB,EACzB,yBAAyB,EACzB,0BAA0B,EAC1B;UACA;UAAA;QAER,CAAC;MAET,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,CAACX,MAAM,CAAC,CAAC;;EAEZ;EACA,MAAMY,aAAa,GAAGA,CAAC;IAAEC,YAAY;IAAEC;EAAM,CAAC,EAAEb,SAAS,KAAK;IAC1D,MAAMc,KAAK,GAAGd,SAAS,CAACE,MAAM,CAACW,KAAK,CAAC;IACrC,MAAME,KAAK,GAAGf,SAAS,CAACQ,QAAQ,CAAC,CAAC,CAAC,CAACF,IAAI,CAACO,KAAK,CAAC;IAC/C,OAAQ,GAAEC,KAAM,MAAKC,KAAM,EAAC;EAChC,CAAC;EAED,oBACInB,OAAA;IAAKoB,KAAK,EAAE;MAAEC,KAAK,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACxCvB,OAAA;MAAAuB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACxBvB,SAAS,iBAAIJ,OAAA,CAACH,GAAG;MAACa,IAAI,EAAEN,SAAU;MAACwB,OAAO,EAAE;QAAEC,QAAQ,EAAE;UAAEC,SAAS,EAAE;YAAEZ,KAAK,EAAEH;UAAc;QAAE;MAAE;IAAE;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrG,CAAC;AAEd,CAAC;AAACzB,EAAA,CAnDID,cAAc;EAAA,QACGH,gBAAgB;AAAA;AAAAiC,EAAA,GADjC9B,cAAc;AAqDpB,eAAeA,cAAc;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}