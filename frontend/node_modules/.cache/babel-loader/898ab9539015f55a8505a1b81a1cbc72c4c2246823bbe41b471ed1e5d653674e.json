{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17034\\\\Documents\\\\GitHub\\\\CS321\\\\frontend\\\\src\\\\components\\\\CompletePieChart.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { PieChart, Pie, Cell } from \"recharts\";\nimport { useIncomeContext } from '../hooks/useIncomeContext';\nimport { useExpensesContext } from '../hooks/useExpensesContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompletePieChart = () => {\n  _s();\n  const {\n    expenses\n  } = useExpensesContext();\n  const {\n    income\n  } = useIncomeContext();\n\n  // Calculate total income\n  const totalIncome = income.reduce((acc, curr) => acc + curr.amount, 0);\n\n  // Calculate total expenses\n  const totalExpenses = expenses.reduce((acc, curr) => acc + curr.amount, 0);\n\n  // If both totalIncome and totalExpenses are 0, create data for an even split between income and expenses\n  let data = [];\n  if (totalIncome === 0 && totalExpenses === 0) {\n    data = [{\n      name: \"Expense\",\n      value: 1\n    }, {\n      name: \"Income\",\n      value: 1\n    }];\n  } else {\n    data = [{\n      name: \"Expense\",\n      value: totalExpenses\n    }, {\n      name: \"Income\",\n      value: totalIncome\n    }];\n  }\n  const colors = ['#ff6961', '#77dd77']; // Red for expenses, green for income\n\n  const renderCustomizedLabel = ({\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    name\n  }) => {\n    const RADIAN = Math.PI / 180;\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\n    return /*#__PURE__*/_jsxDEV(\"text\", {\n      x: x,\n      y: y,\n      fill: \"white\",\n      textAnchor: \"middle\",\n      dominantBaseline: \"central\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"CompletePieChart\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        marginBottom: \"-65px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          display: 'block'\n        },\n        children: \"Expenses vs Income\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          display: 'block'\n        },\n        children: \"Pie-Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(PieChart, {\n        width: 400,\n        height: 400,\n        children: /*#__PURE__*/_jsxDEV(Pie, {\n          dataKey: \"value\",\n          nameKey: \"name\",\n          data: data,\n          cx: 200,\n          cy: 200,\n          innerRadius: 0 // Adjust inner radius to remove outer sector\n          ,\n          outerRadius: 90,\n          fill: \"#8884d8\",\n          label: renderCustomizedLabel // Use custom label formatter\n          ,\n          children: data.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n            fill: colors[index]\n          }, `cell-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(CompletePieChart, \"1t0LrYxPv8sG2STKMDADS/qXAoQ=\", false, function () {\n  return [useExpensesContext, useIncomeContext];\n});\n_c = CompletePieChart;\nexport default CompletePieChart;\nvar _c;\n$RefreshReg$(_c, \"CompletePieChart\");","map":{"version":3,"names":["React","PieChart","Pie","Cell","useIncomeContext","useExpensesContext","jsxDEV","_jsxDEV","CompletePieChart","_s","expenses","income","totalIncome","reduce","acc","curr","amount","totalExpenses","data","name","value","colors","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","RADIAN","Math","PI","radius","x","cos","y","sin","fill","textAnchor","dominantBaseline","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","marginBottom","display","justifyContent","width","height","dataKey","nameKey","label","map","entry","index","_c","$RefreshReg$"],"sources":["C:/Users/17034/Documents/GitHub/CS321/frontend/src/components/CompletePieChart.js"],"sourcesContent":["import React from \"react\";\r\nimport { PieChart, Pie, Cell } from \"recharts\";\r\nimport { useIncomeContext } from '../hooks/useIncomeContext';\r\nimport { useExpensesContext } from '../hooks/useExpensesContext';\r\n\r\nconst CompletePieChart = () => {\r\n    const { expenses } = useExpensesContext();\r\n    const { income } = useIncomeContext();\r\n\r\n    // Calculate total income\r\n    const totalIncome = income.reduce((acc, curr) => acc + curr.amount, 0);\r\n\r\n    // Calculate total expenses\r\n    const totalExpenses = expenses.reduce((acc, curr) => acc + curr.amount, 0);\r\n\r\n    // If both totalIncome and totalExpenses are 0, create data for an even split between income and expenses\r\n    let data = [];\r\n    if (totalIncome === 0 && totalExpenses === 0) {\r\n        data = [\r\n            { name: \"Expense\", value: 1 },\r\n            { name: \"Income\", value: 1 },\r\n        ];\r\n    } else {\r\n        data = [\r\n            { name: \"Expense\", value: totalExpenses },\r\n            { name: \"Income\", value: totalIncome },\r\n        ];\r\n    }\r\n\r\n    const colors = ['#ff6961', '#77dd77']; // Red for expenses, green for income\r\n\r\n\r\n    const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, name }) => {\r\n        const RADIAN = Math.PI / 180;\r\n        const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n        const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n        const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n        return (\r\n            <text x={x} y={y} fill=\"white\" textAnchor=\"middle\" dominantBaseline=\"central\">\r\n                {name}\r\n            </text>\r\n        );\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"CompletePieChart\">\r\n            <h3 style={{ marginBottom: \"-65px\" }}>\r\n                <span style={{ display: 'block' }}>Expenses vs Income</span>\r\n                <span style={{ display: 'block' }}>Pie-Chart</span>\r\n            </h3> <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <PieChart width={400} height={400}>\r\n                    <Pie\r\n                        dataKey=\"value\"\r\n                        nameKey=\"name\"\r\n                        data={data}\r\n                        cx={200}\r\n                        cy={200}\r\n                        innerRadius={0} // Adjust inner radius to remove outer sector\r\n                        outerRadius={90}\r\n                        fill=\"#8884d8\"\r\n                        label={renderCustomizedLabel} // Use custom label formatter\r\n                    >\r\n                        {data.map((entry, index) => (\r\n                            <Cell key={`cell-${index}`} fill={colors[index]} />\r\n                        ))}\r\n                    </Pie>\r\n                </PieChart>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default CompletePieChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}