{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17034\\\\Documents\\\\GitHub\\\\CS321\\\\frontend\\\\src\\\\components\\\\ExpenseForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useExpensesContext } from \"../hooks/useExpensesContext\";\nimport { useAuthContext } from '../hooks/useAuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseForm = () => {\n  _s();\n  const {\n    dispatch\n  } = useExpensesContext();\n  const {\n    user\n  } = useAuthContext();\n  const [category, setCategory] = useState('');\n  const [amount, setAmount] = useState('');\n  const [description, setDescription] = useState('');\n  const [error, setError] = useState(null);\n  const [emptyFields, setEmptyFields] = useState([]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!user) {\n      setError('You must be loggin in');\n      return;\n    }\n    if (!category || !amount || !description) {\n      setError('Please fill in all fields.');\n      return;\n    }\n\n    // Validate amount to ensure it's not negative\n    if (parseFloat(amount) < 0) {\n      setError('Amount cannot be negative.');\n      return;\n    }\n    const expense = {\n      category,\n      amount,\n      description\n    };\n    const response = await fetch('/api/expenses', {\n      method: 'POST',\n      body: JSON.stringify(expense),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${user.token}`\n      }\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setError(json.error);\n      setEmptyFields(json.emptyFields);\n    }\n    if (response.ok) {\n      setCategory('');\n      setAmount('');\n      setDescription('');\n      setError(null);\n      setEmptyFields([]);\n      console.log('new expense added', json);\n      dispatch({\n        type: 'CREATE_EXPENSE',\n        payload: json\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"create\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add a New Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setCategory(e.target.value),\n      value: category,\n      className: emptyFields.includes('category') ? 'error' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"$\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      onChange: e => setAmount(e.target.value),\n      value: amount,\n      className: emptyFields.includes('amount') ? 'error' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setDescription(e.target.value),\n      value: description,\n      className: emptyFields.includes('description') ? 'error' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(ExpenseForm, \"y6WhEhTqSso/vIb6npRoTOW6yLI=\", false, function () {\n  return [useExpensesContext, useAuthContext];\n});\n_c = ExpenseForm;\nexport default ExpenseForm;\nvar _c;\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["useState","useExpensesContext","useAuthContext","jsxDEV","_jsxDEV","ExpenseForm","_s","dispatch","user","category","setCategory","amount","setAmount","description","setDescription","error","setError","emptyFields","setEmptyFields","handleSubmit","e","preventDefault","parseFloat","expense","response","fetch","method","body","JSON","stringify","headers","token","json","ok","console","log","type","payload","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","value","includes","_c","$RefreshReg$"],"sources":["C:/Users/17034/Documents/GitHub/CS321/frontend/src/components/ExpenseForm.js"],"sourcesContent":["import { useState } from 'react';\nimport { useExpensesContext } from \"../hooks/useExpensesContext\"\nimport { useAuthContext } from '../hooks/useAuthContext';\n\nconst ExpenseForm = () => {\n    const { dispatch } = useExpensesContext()\n    const { user } = useAuthContext()\n    const [category, setCategory] = useState('')\n    const [amount, setAmount] = useState('')\n    const [description, setDescription] = useState('')\n    const [error, setError] = useState(null)\n    const [emptyFields, setEmptyFields] = useState([])\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n\n        if (!user){\n            setError('You must be loggin in')\n            return;\n        }\n\n        if (!category || !amount || !description) {\n            setError('Please fill in all fields.');\n            return;\n        }\n\n        // Validate amount to ensure it's not negative\n        if (parseFloat(amount) < 0) {\n            setError('Amount cannot be negative.');\n            return;\n        }\n\n          const expense = {category, amount, description}\n\n          const response = await fetch('/api/expenses', {\n            method: 'POST',\n            body: JSON.stringify(expense),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${user.token}`\n            }\n          })\n          const json = await response.json()\n\n          if (!response.ok){\n            setError(json.error)\n            setEmptyFields(json.emptyFields)\n          }\n          if (response.ok){\n            setCategory('')\n            setAmount('')\n            setDescription('')\n            setError(null)\n            setEmptyFields([])\n            console.log('new expense added', json)\n            dispatch({type: 'CREATE_EXPENSE', payload: json})\n          }\n    }\n    \n    return (\n        <form className=\"create\" onSubmit={handleSubmit}>\n            <h3>Add a New Expense</h3>\n\n            <label>Category</label>\n            <input\n                type=\"text\"\n                onChange={(e) => setCategory(e.target.value)}\n                value={category}\n                className={emptyFields.includes('category') ? 'error' : ''}\n            />\n\n            <label>$</label>\n            <input\n                type=\"number\"\n                onChange={(e) => setAmount(e.target.value)}\n                value={amount}\n                className={emptyFields.includes('amount') ? 'error' : ''}\n            />\n\n            <label>Description</label>\n            <input\n                type=\"text\"\n                onChange={(e) => setDescription(e.target.value)}\n                value={description}\n                className={emptyFields.includes('description') ? 'error' : ''}\n            />\n\n            <button>Add Expense</button>\n            {error && <div className=\"error\">{error}</div>}\n        </form>\n    )\n}\n\nexport default ExpenseForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}