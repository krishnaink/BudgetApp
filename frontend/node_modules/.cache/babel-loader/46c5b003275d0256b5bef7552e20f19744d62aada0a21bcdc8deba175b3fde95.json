{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17034\\\\Documents\\\\GitHub\\\\CS321\\\\frontend\\\\src\\\\components\\\\IncomePieChart.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { PieChart, Pie, Cell } from \"recharts\";\nimport { useIncomeContext } from '../hooks/useIncomeContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IncomePieCharts = () => {\n  _s();\n  const {\n    income\n  } = useIncomeContext();\n  const totalIncome = income.reduce((acc, curr) => acc + curr.amount, 0);\n  let data = [];\n  if (totalIncome === 0) {\n    // If total income is zero, create a grey-filled pie chart\n    data = [{\n      name: 'No Income',\n      value: 1\n    }];\n  } else {\n    // If total income is not zero, create data with different shades of green\n    data = income.map((item, index) => ({\n      name: item.category,\n      value: item.amount,\n      fill: `rgb(0, ${255 - index * 30}, 0)` // Generate shades of green dynamically\n    }));\n  }\n  const renderCustomizedLabel = ({\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    name\n  }) => {\n    const RADIAN = Math.PI / 180;\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\n    return /*#__PURE__*/_jsxDEV(\"text\", {\n      x: x,\n      y: y,\n      fill: \"white\",\n      textAnchor: \"middle\",\n      dominantBaseline: \"central\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"IncomePieChart\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        marginBottom: \"-65px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          display: 'block'\n        },\n        children: \"Income\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          display: 'block'\n        },\n        children: \"Pie-Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(PieChart, {\n        width: 400,\n        height: 400,\n        children: /*#__PURE__*/_jsxDEV(Pie, {\n          dataKey: \"value\",\n          isAnimationActive: false,\n          data: data,\n          cx: 200,\n          cy: 200,\n          outerRadius: 80,\n          fill: \"#8884d8\",\n          label: renderCustomizedLabel // Use custom label formatter\n          ,\n          children: data.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n            fill: entry.fill\n          }, `cell-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(IncomePieCharts, \"D9rYsa1XFRsVoy4U4h6P9exYtu4=\", false, function () {\n  return [useIncomeContext];\n});\n_c = IncomePieCharts;\nexport default IncomePieCharts;\nvar _c;\n$RefreshReg$(_c, \"IncomePieCharts\");","map":{"version":3,"names":["React","PieChart","Pie","Cell","useIncomeContext","jsxDEV","_jsxDEV","IncomePieCharts","_s","income","totalIncome","reduce","acc","curr","amount","data","name","value","map","item","index","category","fill","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","RADIAN","Math","PI","radius","x","cos","y","sin","textAnchor","dominantBaseline","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","marginBottom","display","justifyContent","width","height","dataKey","isAnimationActive","label","entry","_c","$RefreshReg$"],"sources":["C:/Users/17034/Documents/GitHub/CS321/frontend/src/components/IncomePieChart.js"],"sourcesContent":["import React from \"react\";\r\nimport { PieChart, Pie, Cell } from \"recharts\";\r\nimport { useIncomeContext } from '../hooks/useIncomeContext';\r\n\r\nconst IncomePieCharts = () => {\r\n    const { income } = useIncomeContext();\r\n\r\n    const totalIncome = income.reduce((acc, curr) => acc + curr.amount, 0);\r\n\r\n    let data = [];\r\n\r\n    if (totalIncome === 0) {\r\n        // If total income is zero, create a grey-filled pie chart\r\n        data = [{ name: 'No Income', value: 1 }];\r\n    } else {\r\n        // If total income is not zero, create data with different shades of green\r\n        data = income.map((item, index) => ({\r\n            name: item.category,\r\n            value: item.amount,\r\n            fill: `rgb(0, ${255 - index * 30}, 0)` // Generate shades of green dynamically\r\n        }));\r\n    }\r\n\r\n    const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, name }) => {\r\n        const RADIAN = Math.PI / 180;\r\n        const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n        const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n        const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n        return (\r\n            <text x={x} y={y} fill=\"white\" textAnchor=\"middle\" dominantBaseline=\"central\">\r\n                {name}\r\n            </text>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"IncomePieChart\">\r\n            <h3 style={{ marginBottom: \"-65px\" }}>\r\n                <span style={{ display: 'block' }}>Income</span>\r\n                <span style={{ display: 'block' }}>Pie-Chart</span>\r\n            </h3> <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <PieChart width={400} height={400}>\r\n                    <Pie\r\n                        dataKey=\"value\"\r\n                        isAnimationActive={false}\r\n                        data={data}\r\n                        cx={200}\r\n                        cy={200}\r\n                        outerRadius={80}\r\n                        fill=\"#8884d8\"\r\n                        label={renderCustomizedLabel} // Use custom label formatter\r\n                    >\r\n                        {data.map((entry, index) => (\r\n                            <Cell key={`cell-${index}`} fill={entry.fill} />\r\n                        ))}\r\n                    </Pie>\r\n                </PieChart>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default IncomePieCharts;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}